X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
> X
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
library(pdist)
dists <- pdist(t(mat1), t(mat2))
as.matrix(dists)
outer(mat1,mat2,Vectorize(euclidean_distance))
outer(X,Y,Vectorize(euclidean_distance))
outer(X,Y,Vectorize(dist))
outer(X,Y,Vectorize(dist(X, method="euclidean", diag=FALSE, upper=FALSE, p=2))
q()
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
outer(X,Y,Vectorize(dist(X, method="euclidean", diag=FALSE, upper=FALSE, p=2))
q()
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
outer(X,Y,Vectorize(dist(X, method="euclidean", diag=FALSE, upper=FALSE, p=2))
q()
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
outer(X,Y,Vectorize(dist(X, method="euclidean", diag=FALSE, upper=FALSE, p=2))
q
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
dist(X, method="euclidean", diag=FALSE, upper=FALSE, p=2)))
rbind(X,Y)
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(
X, 3, 7, dist = "euclidean",
library = "GUDHI", location = FALSE, printProgress = FALSE)
DX
DY<-ripsDiag(
Y, 3, 7, dist = "euclidean",
library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 3, 7, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 3, 7, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)
bottleneck(DX, DY, dimension = 1)
utils:::menuInstallLocal()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 3, 7, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 3, 7, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)
installed.packages()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 3, 7, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 3, 7, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)
bottleneck(DX, DY)
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = TRUE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = False, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)
DX
DY
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = False, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)
bottleneck(DX, DY, dimension = 8)
bottleneck(DX, DY)
plot(
x, diagLim = NULL, dimension = NULL, col = NULL,
rotated = FALSE, barcode = FALSE, band = NULL, lab.line = 2.2,
colorBand = "pink", colorBorder = NA, add = FALSE, ...)q
plot(DX, diagLim = NULL, dimension = NULL, col = NULL, rotated = FALSE, barcode = FALSE, band = NULL, lab.line = 2.2,colorBand = "pink", colorBorder = NA, add = FALSE, ...)
plot(DX, diagLim = NULL, dimension = NULL, col = NULL, rotated = FALSE, barcode = FALSE, band = NULL, lab.line = 2.2,colorBand = "pink", colorBorder = NA, add = FALSE)
plot(DX)
DX
DY
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = true, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = true, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = True, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = True, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)
plot(DX)X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = True, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = True, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)
plot(DX)X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = TRUE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = TRUE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = 1)
plot(DX)
ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = TRUE, printProgress = FALSE)
ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = TRUE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = TRUE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = (0,1))
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = TRUE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = TRUE, printProgress = FALSE)
DY
bottleneck(DX, DY, dimension = c(0,1))
DX[,1]
DX[1,1]
DX[1]
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX[1], DY[1], dimension = c(0,1))
DX
DX[1]
DX[2]
summary(DX)
print(DX)
summary.diagram(DX)
summary.diagram(DX[1])
summary.diagram(ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE))
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX[["diagram"]], DY[["diagram"]], dimension = c(0,1))
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX[["diagram"]], DY[["diagram"]], dimension = c(0,1))
plot(DX[["diagram"]], DY[["diagram"]])
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX[["diagram"]], DY[["diagram"]], dimension = c(0,1))
plot(c(DX[["diagram"]], DY[["diagram"]]))
plot(DX[["diagram"]])
plot(DX[["diagram"]])
X<-matrix(c(0.81,2.87,2.15,1.18,3.19,3.62,4.17,2.01,5.32,4.88,6.21,3.13), ncol=2, byrow=TRUE)
X
Y<-matrix(c(0.75,2.80,2.33,1.25,3.28,3.66,4.15,2.15,5.42,4.78,6.34,3.12), ncol=2, byrow=TRUE)
Y
rbind(X,Y)
dist(rbind(X,Y), method="euclidean", diag=FALSE, upper=FALSE, p=2)
DX<-ripsDiag(X, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DX
DY<-ripsDiag(Y, 1, 4, dist = "euclidean",library = "GUDHI", location = FALSE, printProgress = FALSE)
DY
bottleneck(DX[["diagram"]], DY[["diagram"]], dimension = c(0,1))
q()
utils:::menuInstallPkgs()
save.image("C:\\Users\\DavidDFG\\Desktop\\DataScience\\Bayesian Statistics\\Assignment  01 - Description and instructions-20210330\\Bayesian\\Assignment 02\\JAGS.RData")
data <- read.csv("aug_train.csv")
test <- read.csv("aug_test.csv")
test_response <- read.csv("Test_Response.csv")
test$Response <- test_response$Response
data <- data[c("Gender","Age","Driving_License","Previously_Insured","Vehicle_Age","Vehicle_Damage","Annual_Premium","Vintage","Response")]
preprocess <- function(data) {
    data$Vehicle_Age <- as.numeric(factor(data$Vehicle_Age, levels=c('< 1 Year','1-2 Year','> 2 Years')))
    data$Vehicle_Damage <- as.numeric(factor(data$Vehicle_Damage, levels=c('No','Yes'))) 
    data$Gender <- as.numeric(factor(data$Gender))
    return(data)
}
data <- preprocess(data)
test <- preprocess(test)
resample <- function(data,size) {
    total = size * 2
    if (total > nrow(data)) {
        cat("Not enough data to create a dataframe of size ",total)
        return(data)
    } else if (size > 62601) {
        print("Not enough samples!")
        return(data)
    }
    negative <- sample(x=which(data$Response == 0), size=size, replace=FALSE)
    positive <- sample(x=which(data$Response == 1), size=size, replace=FALSE)
    resampled_idx <- c(negative, positive)
    return(data[resampled_idx, ])
}df <- resample(data,1000)
dim(df)
resample <- function(data,size) {
    total = size * 2
    if (total > nrow(data)) {
        cat("Not enough data to create a dataframe of size ",total)
        return(data)
    } else if (size > 62601) {
        print("Not enough samples!")
        return(data)
    }
    negative <- sample(x=which(data$Response == 0), size=size, replace=FALSE)
    positive <- sample(x=which(data$Response == 1), size=size, replace=FALSE)
    resampled_idx <- c(negative, positive)
    return(data[resampled_idx, ])
}
df <- resample(data,1000)
dim(df)
table(df$Response)
response <- df$Response
df <- df[,-(9:9),drop=FALSE]
df <- as.data.frame(scale(df))
df <- cbind(df, Response = response)
df[1:5,]
mod.jags <- paste(" 
model {
for (i in 1:N){
  volunteer[i] ~ dbern(p[i])  
  logit(p[i]) <- mu[i]   
  mu[i] <- b[1] + b[2] * female[i] + b[3] * neuroticism[i] + b[4] * extraversion[i]
  }
for(j in 1:4){
  b[j] ~ dnorm(0, 0.1)
  }
}
")
writeLines(mod.jags, "mod.jags")    
params.jags <- c("b")
inits1.jags <- list("b" = rep(0, 4))
inits.jags <- list(inits1.jags, inits1.jags, inits1.jags, inits1.jags)
set.seed(123)
library("rjags")
mod.rjags <- jags.model(file = "mod.jags", data = dl, inits = inits.jags,
library("rjags")
)
library("rjags")
mod.rjags <- jags.model(file = "mod.jags", data = dl, inits = inits.jags,
                        n.chains = 4, n.adapt = 1000)
mod.rjags <- jags.model(file = "mod.jags", data = df, inits = inits.jags,
                        n.chains = 4, n.adapt = 1000)
R.version
R.home()
q()
